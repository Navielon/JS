'use strict';

// function getAge(birthYear) {
//   const age = 2022 - birthYear;
//   console.log(nameFirst);

//   function printAge() {
//     let info = `${age} ${nameFirst}`;
//     console.log(info);

//     if (age >= 18) {
//       // var isAdult = true; Можно, но не нужно
//       const nameFirst = 'Katya'; // Заменит переменную. Т.к. используется ближайший Scope. Т.к. они находятся в разнх облостях переменных
//       const adult = `${nameFirst} взрослый!`;
//       console.log(adult);
//       function sum(a, b) {
//         return a + b;
//       }

//       console.log(sum(1, 3));

//       info = 'New info'; // Переопределяем старую переменную. Присваеваем ей новое значение.
//     }
//     console.log(info);
//     // console.log(isAdult); Можно, но не нужно
//   }
//   // console.log(sum(1, 3)); Нельзя
//   // console.log(adult); Нельзя
//   // console.log(info); Нельзя
//   printAge();
//   // console.log(isAdult); Нельзя
//   return age;
// }

// const nameFirst = 'Ruslan';
// getAge(2000);
// // printAge(); Нельзя
//========================================================================================================================================================
// Variables
// console.log(firstName);
// console.log(job);
// console.log(birthYear);

// var firstName = 'Ruslan';
// let job = 'programmer';
// const birthYear = 1974;

// Functions
// console.log(declSum(1, 2));
// console.log(exprSum(1, 2));
// console.log(arrSum(1, 2));
// console.log(arrSums);
// function declSum (a, b) {
//    return a+b;
// };

// const exprSum = function (a, b) {
//    return a + b ;
// };

// const arrSum = (a, b) => a + b;
// var arrSums = (a, b) => a + b;
//========================================================================================================================================================

//TODO Ключевое слово THIS

// Ключевое слово / переменная this: Специальная переменная, которая создаётся для каждого контекста выполнения (каждой функции).
// Принимает значение (указывает на) "Владельца" функции, в которой используется ключевое слово this.

// this НЕ статично. Оно зависит от того, как вызывается функция, и его значение присваевается только тогда, когда функция действительно вызывается.

// Пример метода
// const user999 = {
//    name: 'Jack',
//    birthYear: 1995,
//    getAge: function(){
//       return 2022 - this.birthYear; // this обращается к имени объекта
//    }
// }
// console.log(user999.getAge()); // 27



//=======================================================================================================================
// ||       -                                    -//-                         this                        -//       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
// ||                       Метод                 //               Объект, вызывающий метод                //       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
// ||                 Вызов обычной функции       //                        undefined                      //       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
// ||        Стрелочные функции (не владеют THIS) //        this окружающей функции (лексический this)     //       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
// ||                    Event listener           // Элемент DOM, к которому прикреплён обработчик события //       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
// ||                 new, call, apply, bind      //                       Об это позже...                 //       || //
// ||       --------------------------------------//-------------------------------------------------------//       || //
//=======================================================================================================================
